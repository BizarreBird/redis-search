{"body":"# redis-search\r\n\r\nHigh performance real-time search (Support Chinese), index in Redis for Rails application\r\n\r\n[中文介绍和使用说明](https://github.com/huacnlee/redis-search/wiki/Usage-in-Chinese)\r\n\r\n## Demo\r\n\r\n![](http://l.ruby-china.org/photo/34368688ee1c1928c2841eb2f41306ec.png)\r\n\r\nYou can try the search feature in [`720p.so`](http://720p.so) | [`shu.im`](http://shu.im)\r\n\r\nAnd there is an  [Example App](https://github.com/huacnlee/redis-search-example) to show you how to use redis-search.\r\n\r\n## Master Status\r\n\r\n[![CI Status](https://secure.travis-ci.org/huacnlee/redis-search.png)](http://travis-ci.org/huacnlee/redis-search)\r\n\r\n## Features\r\n\r\n* Real-time search\r\n* High performance\r\n* Segment words search and prefix match search\r\n* Support match with alias\r\n* Support ActiveRecord and Mongoid\r\n* Sort results by one field\r\n* Homophone search, pinyin search\r\n* Search as pinyin first chars\r\n* Conditions support\r\n\r\n## Requirements\r\n\r\n* Redis 2.2+\r\n\r\n## Install\r\n\r\n1. In Rails application Gemfile\r\n\r\n    ```ruby\r\n    gem 'chinese_pinyin', '0.4.1'\r\n    gem 'rmmseg-cpp-huacnlee', '0.2.9'\r\n    gem 'redis-search', '0.9.0'\r\n    ```\r\n\r\n    ```bash\r\n    $ bundle install\r\n    ```\r\n\r\n## Configure\r\n\r\n* Create file in: config/initializers/redis_search.rb\r\n\r\n    ```ruby\r\n    require \"redis\"\r\n    require \"redis-namespace\"\r\n    require \"redis-search\"\r\n    # don't forget change namespace\r\n    redis = Redis.new(:host => \"127.0.0.1\",:port => \"6379\")\r\n    # We suggest you use a special db in Redis, when you need to clear all data, you can use flushdb command to clear them.\r\n    redis.select(3)\r\n    # Give a special namespace as prefix for Redis key, when your have more than one project used redis-search, this config will make them work fine.\r\n    redis = Redis::Namespace.new(\"your_app_name:redis_search\", :redis => redis)\r\n    Redis::Search.configure do |config|\r\n      config.redis = redis\r\n      config.complete_max_length = 100\r\n      config.pinyin_match = true\r\n      # use rmmseg, true to disable it, it can save memroy\r\n      config.disable_rmmseg = false\r\n    end\r\n    ```\r\n\r\n## Usage\r\n\r\n* Bind Redis::Search callback event, it will to rebuild search indexes when data create or update.\r\n\r\n    ```ruby\r\n    class Post\r\n      include Mongoid::Document\r\n      include Redis::Search\r\n\r\n      field :title\r\n      field :body\r\n      field :hits\r\n\r\n      belongs_to :user\r\n      belongs_to :category\r\n\r\n      redis_search_index(:title_field => :title,\r\n                         :score_field => :hits,\r\n                         :condition_fields => [:user_id, :category_id],\r\n                         :ext_fields => [:category_name])\r\n\r\n      def category_name\r\n        self.category.name\r\n      end\r\n    end\r\n    ```\r\n\r\n    ```ruby\r\n    class User\r\n      include Mongoid::Document\r\n      include Redis::Search\r\n\r\n      field :name\r\n\t    field :alias_names, :type => Array\r\n      field :tagline\r\n      field :email\r\n      field :followers_count\r\n\r\n      redis_search_index(:title_field => :name,\r\n\t\t                 :alias_field => :alias_names,\r\n                         :prefix_index_enable => true,\r\n                         :score_field => :followers_count,\r\n                         :ext_fields => [:email,:tagline])\r\n    end\r\n    ```\r\n\r\n    ```ruby\r\n    class SearchController < ApplicationController\r\n      # GET /searchs?q=title\r\n      def index\r\n        Redis::Search.query(\"Post\", params[:q], :conditions => {:user_id => 12})\r\n      end\r\n\r\n      # GET /search_users?q=j\r\n      def search_users\r\n        Redis::Search.complete(\"Post\", params[:q], :conditions => {:user_id => 12, :category_id => 4})\r\n      end\r\n    end\r\n    ```\r\n\r\n## Index data to Redis\r\n\r\nIf you are first install it in you old project, or your Redis cache lose, you can use this command to rebuild indexes.\r\n\r\n```bash\r\n$ rake redis_search:index\r\n```\r\n\r\n## Documentation\r\n\r\n* See [Rdoc.info redis-search](http://rubydoc.info/gems/redis-search)\r\n* [Example App](https://github.com/huacnlee/redis-search-example)\r\n\r\n## Benchmark test\r\n\r\nYou can run the rake command (see Rakefile) to make test.\r\nThere is my performance test result.\r\n\r\n* [https://gist.github.com/1150933](https://gist.github.com/1150933)\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"redis-search","tagline":"High performance real-time search (Support Chinese), indexes store in Redis for Rails application","google":"UA-9745660-1"}